//---------------------------------------------------------------------------

#include <vcl.h>
#pragma hdrstop

#include "Unit1.h"
//---------------------------------------------------------------------------
#pragma package(smart_init)
#pragma resource "*.dfm"
TForm1 *Form1;
//---------------------------------------------------------------------------
__fastcall TForm1::TForm1(TComponent* Owner)
	: TForm(Owner)
{
   /*	for(i=0;i<256;i++)
		for(j=0;j<256;j++)
			Image1->Canvas->Pixels[i][j] = (TColor)RGB(i,j,0);    */
	Byte *ptr;
	Image1->Picture->Bitmap->Height = 256;
	Image1->Picture->Bitmap->Width = 256;
	Image1->Picture->Bitmap->PixelFormat = pf24bit;

	for (int i=0; i < 256; i++) {
		ptr = (Byte*) Image1->Picture->Bitmap->ScanLine[i];
		for (j = 0; j < 256; j++) {
			ptr[j*3+2] = (Byte)i;
			ptr[j*3+1] = (Byte)j;
			ptr[j*3] = (Byte)0;
		}

	}

	Image1->Refresh();

}
//---------------------------------------------------------------------------
void __fastcall TForm1::TrackBar1Change(TObject *Sender)
{
	int color = TrackBar1->Position;
	Byte *ptr;
	Image1->Picture->Bitmap->Height = 256;
	Image1->Picture->Bitmap->Width = 256;
	Image1->Picture->Bitmap->PixelFormat = pf24bit;



	for (int i=0; i < 256; i++)
	{
		ptr = (Byte*) Image1->Picture->Bitmap->ScanLine[i];
		for (j = 0; j < 256; j++)
		{
			if(RadioButton1->Checked)
			{
				ptr[j*3+2] = (Byte)i;
				ptr[j*3+1] = (Byte)j;
				ptr[j*3] = (Byte)color;
			}
			else if(RadioButton2->Checked)
			{
				ptr[j*3+2] = (Byte)color;
				ptr[j*3+1] = (Byte)i;
				ptr[j*3] =   (Byte)j;
			}
			else if(RadioButton3->Checked)
			{
				ptr[j*3+2] = (Byte)i;
				ptr[j*3+1] = (Byte)color;
				ptr[j*3] =   (Byte)j;
			}
		}

	}

	Image1->Refresh();
}
//---------------------------------------------------------------------------


void __fastcall TForm1::Image1MouseDown(TObject *Sender, TMouseButton Button, TShiftState Shift,
		  int X, int Y)
{
	Byte *ptr;
	Image2->Picture->Bitmap->Height = 50;
	Image2->Picture->Bitmap->Width = 50;
	Image2->Picture->Bitmap->PixelFormat = pf24bit;
	bPtrImageRow = (Byte *)Image1->Picture->Bitmap->ScanLine[X];
	int color[3];



	color[0]= bPtrImageRow[bPtrImageRow[3*Y+0]];
	color[1]= bPtrImageRow[bPtrImageRow[3*Y+1]];
	color[2]= bPtrImageRow[bPtrImageRow[3*Y+2]];
	for(int i=0;i<10;i++)
	{
	ptr = (Byte*) Image2->Picture->Bitmap->ScanLine[i];
		for(int j=0;j<10;j++)
		{
				ptr[j*3+2] = color[2];
				ptr[j*3+1] = color[1];
				ptr[j*3] = color[0];
		}
	}
	Image2->Refresh();
}
//---------------------------------------------------------------------------

